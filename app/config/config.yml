imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: %locale% }
    translator: ~
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    trust_proxy_headers: false # Should Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:         ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [FcSiteBundle]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

fos_user:
  firewall_name: main
  db_driver: orm
  user_class: Fc\UserBundle\Entity\User
  
  registration:
    form:
      type: fc_user_registration
      
      
sonata_admin:
    title:      Fanta Project Admin
    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
      layout: FcAdminBundle::standard_layout.html.twig
    dashboard:
      blocks:
        # Customize this part to add new block configuration
        - { position: left, type: sonata.admin.block.admin_list }
        - { position: right, type: sonata.block.service.text, settings: { content: "<h2>Welcome to the Sonata Admin</h2> <p>This is a <code>sonata.block.service.text</code> from the Block Bundle, you can create and add new block in these area by configuring the <code>sonata_admin</code> section.</p> <br /> For instance, here a RSS feed parser (<code>sonata.block.service.rss</code>):"} }
      
      groups:
        datireali:
          label: Dati reali
          items: ~
            

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:

        # Some specific block from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:      
          
services:
  fc.admin.admin.season:
      class: Fc\AdminBundle\Admin\SeasonAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: datireali, label: Stagioni }
      arguments: [null, Fc\FantaBundle\Entity\Season, null]
      
  fc.admin.admin.championship:
      class: Fc\AdminBundle\Admin\ChampionshipAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: datireali, label: Campionati }
      arguments: [null, Fc\FantaBundle\Entity\Championship, FcAdminBundle:ChampionshipAdmin]      

  fc.admin.admin.club:
      class: Fc\AdminBundle\Admin\ClubAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: datireali, label: Clubs }
      arguments: [null, Fc\FantaBundle\Entity\Club, null]      

  fc.admin.admin.player:
      class: Fc\AdminBundle\Admin\PlayerAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: datireali, label: Giocatori }
      arguments: [null, Fc\FantaBundle\Entity\Player, null]      

  fc.admin.admin.mark:
      class: Fc\AdminBundle\Admin\MarkAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: datireali, label: Voti }
      arguments: [null, Fc\FantaBundle\Entity\Mark, null]      
     
  # competition type services    
  fc_fanta.competition_factory:
      class: Fc\FantaBundle\Competition\CompetitionFactory
      arguments: 
        - @form.factory
  
  #fc_fanta.competition_championship:
  #    class: Fc\FantaBundle\Competition\ChampionshipCompetition
  #    tags:
  #      - { name: fc_fanta.competition, label: "Campionato a gironi" }
        
  #fc_fanta.competition_cup:
  #    class: Fc\FantaBundle\Competition\CupCompetition
  #    tags:
  #      - { name: fc_fanta.competition, label: "Coppa a eliminazione" }


# FcFantaBundle config

fc_fanta: 
  competitions:
    - { name: cup, label: "Coppa a eliminazione", class: Fc\FantaBundle\Competition\CupCompetition }
    - { name: championship, label: "Campionato a gironi", class: Fc\FantaBundle\Competition\ChampionshipCompetition }
    